---

# project information
project_name: bookstack
project_url: "https://github.com/BookStackApp/BookStack"
project_logo: "https://s3-us-west-2.amazonaws.com/linuxserver-docs/images/bookstack-logo500x500.png"
project_blurb: |
  [{{ project_name|capitalize }}]({{ project_url }}) is a free and open source Wiki designed for creating beautiful documentation. Feautring a simple, but powerful WYSIWYG editor it allows for teams to create detailed and useful documentation with ease.

  Powered by SQL and including a Markdown editor for those who prefer it, BookStack is geared towards making documentation more of a pleasure than a chore.

  For more information on BookStack visit their website and check it out: https://www.bookstackapp.com
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"

# supported architectures
available_architectures:
  - { arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}
  - { arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}
  - { arch: "{{ arch_armhf }}", tag: "arm32v6-latest"}

# container parameters
param_container_name: "{{ project_name }}"
param_usage_include_vols: true
param_volumes:
  - { vol_path: "/config", vol_host_path: "<path to data>", desc: "this will store any uploaded data on the docker host" }
param_usage_include_env: true
param_env_vars:
  - { env_var: "DB_HOST", env_value: "<yourdbhost>", desc: "for specifying the database host" }
  - { env_var: "DB_USER", env_value: "<yourdbuser>", desc: "for specifying the database user" }
  - { env_var: "DB_PASS", env_value: "<yourdbpass>", desc: "for specifying the database password" }
  - { env_var: "DB_DATABASE", env_value: "bookstackapp", desc: "for specifying the database to be used" }
  - { env_var: "APPURL", env_value: "your.site.here.xyz", desc: "for specifying the url your application will be accessed on "}

param_usage_include_ports: true
param_ports:
  - { external_port: "6875", internal_port: "80", port_desc: "will map the container's port 80 to port 6875 on the host" }

# application setup block
app_setup_block_enabled: true
app_setup_block: |
  This application is dependent on an SQL database be it one you already have or a new one. If you do not already have one, set up our MariaDB container.

  Once the MariaDB container is deployed, you can enter the following commands into the shell of the MariaDB container to create the user, password and database that the app will then use. Replace myuser/mypassword with your own data.

  **Note** this will allow any user with these credentials to connect to the server, it is not limited to localhost

  ```
  from shell: mysql -u root -p
  CREATE DATABASE bookstackapp;
  GRANT USAGE ON *.* TO 'myuser'@'%' IDENTIFIED BY 'mypassword';
  GRANT ALL privileges ON 'bookstackapp'.* TO 'myuser'@localhost;
  FLUSH PRIVILEGES;
  ```

  Once you have completed these, you can then use the docker run command to create your BookStack container. Make sure you replace things such as <yourdbuser> with the correct data.

  Then docker start bookstackapp to start the container. You should then be able to access the container at http://dockerhost:6875

  Default username is admin@admin.com with password of **password**

  If you intend to use this application behind a reverse proxy, such as our LetsEncrypt container or Traefik you will need to make sure that the `APPURL` environment variable is set, or it will not work

  Documentation can be found at https://www.bookstackapp.com/docs/

  ### Advanced Users
  If you wish to use the extra functionality of BookStack such as email, memcache, ldap and so on you will need to make your own .env file with guidance from the BookStack documentation.

  When you create the container, do not set any arguements for SQL or APPURL. The container will copy an .env file to /config/www/.env on your host system for you to edit. 

  ### Composer

  Some simple docker-compose files are included for you to get started with. You will still need to manually configure the SQL server, but the compose files will get the stack running for you. 

# changelog
changelogs:
  - { date: "04.11.18:", desc: "Added php7-ldap"}
  - { date: "15.10.18:", desc: "Changed functionality for advanced users"}
  - { date: "08.10.18:", desc: "Advanced mode, symlink changes, sed fixing, docs updated, added some composer files"}
  - { date: "23.09.28:", desc: "Updates pre-release"}
  - { date: "02.07.18:", desc: "Initial Release." }
